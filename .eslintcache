[{"C:\\_shin\\react-app\\src\\index.js":"1","C:\\_shin\\react-app\\src\\reportWebVitals.js":"2","C:\\_shin\\react-app\\src\\store\\index.js":"3","C:\\_shin\\react-app\\src\\App.js":"4","C:\\_shin\\react-app\\src\\store\\modules\\login.redux.js":"5","C:\\_shin\\react-app\\src\\store\\modules\\theme.redux.js":"6","C:\\_shin\\react-app\\src\\store\\modules\\quiz.redux.js":"7","C:\\_shin\\react-app\\src\\component\\_include\\header.js":"8","C:\\_shin\\react-app\\src\\component\\_include\\footer.js":"9","C:\\_shin\\react-app\\src\\component\\content\\index.js":"10","C:\\_shin\\react-app\\src\\component\\content\\Main\\index.js":"11","C:\\_shin\\react-app\\src\\common.js":"12","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\index.js":"13","C:\\_shin\\react-app\\src\\component\\content\\Error\\index.js":"14","C:\\_shin\\react-app\\src\\component\\content\\Board\\index.js":"15","C:\\_shin\\react-app\\src\\store\\action\\action.js":"16","C:\\_shin\\react-app\\src\\store\\action\\action.type.js":"17","C:\\_shin\\react-app\\src\\component\\content\\Main\\main.js":"18","C:\\_shin\\react-app\\src\\component\\content\\Main\\join.js":"19","C:\\_shin\\react-app\\src\\component\\content\\Main\\login.js":"20","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\list.js":"21","C:\\_shin\\react-app\\src\\component\\content\\Board\\list.js":"22","C:\\_shin\\react-app\\src\\component\\content\\Board\\view.js":"23","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\quiz.list.js":"24","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\step.js":"25","C:\\_shin\\react-app\\src\\fun.js":"26","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\state\\question.js":"27","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\state\\answer.js":"28","C:\\_shin\\react-app\\src\\axios.js":"29","C:\\_shin\\react-app\\src\\component\\_include\\helmet.js":"30"},{"size":1472,"mtime":1614055462770,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1612431650236,"results":"33","hashOfConfig":"32"},{"size":311,"mtime":1612434215210,"results":"34","hashOfConfig":"32"},{"size":3271,"mtime":1614660256034,"results":"35","hashOfConfig":"32"},{"size":981,"mtime":1614055462775,"results":"36","hashOfConfig":"32"},{"size":568,"mtime":1614055462776,"results":"37","hashOfConfig":"32"},{"size":586,"mtime":1614055462775,"results":"38","hashOfConfig":"32"},{"size":3099,"mtime":1614660265412,"results":"39","hashOfConfig":"32"},{"size":244,"mtime":1614055462739,"results":"40","hashOfConfig":"32"},{"size":907,"mtime":1614055462766,"results":"41","hashOfConfig":"32"},{"size":130,"mtime":1614055462742,"results":"42","hashOfConfig":"32"},{"size":1294,"mtime":1614669140969,"results":"43","hashOfConfig":"32"},{"size":42,"mtime":1612433751361,"results":"44","hashOfConfig":"32"},{"size":136,"mtime":1612431650233,"results":"45","hashOfConfig":"32"},{"size":84,"mtime":1612431650232,"results":"46","hashOfConfig":"32"},{"size":713,"mtime":1614055462771,"results":"47","hashOfConfig":"32"},{"size":464,"mtime":1614055462774,"results":"48","hashOfConfig":"32"},{"size":235,"mtime":1614055462744,"results":"49","hashOfConfig":"32"},{"size":5834,"mtime":1614650388030,"results":"50","hashOfConfig":"32"},{"size":1719,"mtime":1614131303480,"results":"51","hashOfConfig":"32"},{"size":1677,"mtime":1614650388032,"results":"52","hashOfConfig":"32"},{"size":1471,"mtime":1612431650233,"results":"53","hashOfConfig":"32"},{"size":308,"mtime":1612431650233,"results":"54","hashOfConfig":"32"},{"size":7620,"mtime":1614650388034,"results":"55","hashOfConfig":"32"},{"size":1276,"mtime":1614650388036,"results":"56","hashOfConfig":"32"},{"size":350,"mtime":1613697456199,"results":"57","hashOfConfig":"32"},{"size":3803,"mtime":1614055462764,"results":"58","hashOfConfig":"32"},{"size":584,"mtime":1614055462747,"results":"59","hashOfConfig":"32"},{"size":224,"mtime":1614650388026,"results":"60","hashOfConfig":"32"},{"size":665,"mtime":1614660105469,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"r1j1br",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\_shin\\react-app\\src\\index.js",[],["135","136"],"C:\\_shin\\react-app\\src\\reportWebVitals.js",[],"C:\\_shin\\react-app\\src\\store\\index.js",[],"C:\\_shin\\react-app\\src\\App.js",["137","138","139","140","141"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './component/_include/header';\r\nimport Footer from './component/_include/footer';\r\nimport Content from './component/content/index';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Login, Join } from './component/content/Main';\r\nimport { useSelector } from 'react-redux';\r\nimport ReactHelmet from './component/_include/helmet';\r\n\r\nfunction App({history, match}) {\r\n\r\n  let [mode, setMode] = useState('dark');\r\n\r\n  let [ user, setUser ] = useState({\r\n      memId : sessionStorage.getItem('MEMBER_ID') ? sessionStorage.getItem('MEMBER_ID') : '',\r\n  });\r\n\r\n  let { memId } = user;\r\n  \r\n  const nowPath = history.location.pathname;\r\n\r\n  const { loginData } = useSelector(state => ({ loginData : state.loginRedux }));\r\n  const { themeStats } = useSelector(state => ({themeStats : state.themeRedux }));\r\n\r\n  // 함수가 선언될 경우 postMessage로 해당하는 메세지리를 보낸다\r\n  const sendPostMessageToRN = async (message) => {\r\n\r\n    var value = {\r\n      'type'  : \"OnClick\",\r\n      'state' : 'web -> rn'\r\n    }\r\n\r\n    await (window[\"ReactNativeWebView\"]||window).postMessage(JSON.stringify(value));\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    sendPostMessageToRN();\r\n\r\n    if ((window[\"ReactNativeWebView\"]||window)) {\r\n\r\n      /**\r\n       * message 이벤트 RN에서 webView로 데이터를 넘길 때 사용하는 이벤트\r\n       * \r\n       * ios = window, android = document 차이가 있다.\r\n       */\r\n  \r\n      const isUIWebView = () => {\r\n        /**\r\n         * 정규식을 통해서 os 버전을 확인한다.\r\n         */\r\n        return navigator.userAgent\r\n          .toLowerCase()\r\n          .match(/\\(ip.*applewebkit(?!.*(version|crios))/)\r\n      }\r\n  \r\n      const receiver = isUIWebView() ? window : document\r\n  \r\n  \r\n      /** android */\r\n      receiver.addEventListener(\"message\", webLog);\r\n    } else {\r\n      // 모바일이 아니라면 모바일 아님을 alert로 띄웁니다.\r\n      alert('error');\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    console.log('test');\r\n\r\n    if(loginData.loginYn === false){\r\n      history.push('/login');\r\n    }else{\r\n\r\n      // ip 로그쌓을 API\r\n      history.push('/quiz');\r\n    }\r\n  }, [loginData])\r\n\r\n  const webLog = (e) => {\r\n\r\n    const event = JSON.parse(e.data);\r\n    alert(event.data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ReactHelmet>\r\n        testest\r\n      </ReactHelmet>\r\n      {\r\n        ((loginData) => {\r\n          \r\n          if(loginData.loginYn === false){\r\n            return(\r\n              <>\r\n                <h2>Sample Quiz</h2>\r\n              {\r\n                nowPath.indexOf('join') > -1 ? \r\n                      <Join history={history}></Join> : \r\n                      <Login history={history} indexUser={setUser}></Login>\r\n              }                \r\n              </>\r\n            )\r\n          }else{\r\n            return(\r\n              <>\r\n                <Header mode={themeStats.themeState} history={history}></Header>\r\n                  <Content history={history} match={match}></Content>\r\n                <Footer></Footer>\r\n              </>\r\n            )\r\n          }\r\n        })(loginData)\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n ","C:\\_shin\\react-app\\src\\store\\modules\\login.redux.js",[],"C:\\_shin\\react-app\\src\\store\\modules\\theme.redux.js",[],"C:\\_shin\\react-app\\src\\store\\modules\\quiz.redux.js",[],"C:\\_shin\\react-app\\src\\component\\_include\\header.js",["142","143","144","145"],"import react, { useCallback, useState } from 'react';\r\nimport { Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { themeDark, themePrimary } from '../../store/action/action';\r\nimport ReactHelmet from './helmet';\r\n\r\nconst Header = ({ history, match, mode, changeMode}) => {\r\n\r\n\r\n    const linkGo = (link) => {\r\n\r\n        setToogle(true);\r\n\r\n        history.push(`/${link}`);\r\n    }\r\n\r\n    const [ navExpanded, setNavExpanded ] = useState(false);\r\n\r\n    const { themeStats } = useSelector(state => ({themeStats : state.themeRedux }));\r\n    \r\n    const setToogle = (expanded) => {\r\n\r\n        let isValue = expanded === true ? false : true;\r\n\r\n        setNavExpanded(isValue);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const changeDark = useCallback( (e) => {\r\n        dispatch(themeDark(e));\r\n    }, [dispatch]);\r\n    \r\n    const changePrimary = useCallback( (e) => {\r\n        dispatch(themePrimary(e));\r\n    }, [dispatch]);\r\n \r\n    const changeTheme = (e) => {\r\n\r\n        let test = themeStats.themeState === 'dark' ? 'primary' : 'dark';\r\n        console.log(test);\r\n\r\n        if(e === 'dark'){\r\n            changePrimary('primary');\r\n        }else{\r\n            changeDark('dark');\r\n        }\r\n    }\r\n    \r\n    let theme = themeStats.themeState;\r\n    return(\r\n        <>\r\n            <Navbar \r\n                collapseOnSelect \r\n                expand=\"lg\" \r\n                bg={mode} \r\n                variant=\"dark\"\r\n                onToggle={() => setToogle(navExpanded)}\r\n                expanded={navExpanded}\r\n            >\r\n                <Navbar.Brand href=\"#home\">Sample Quiz</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    {/* <Nav className=\"mr-auto\">\r\n                    <Nav.Link onClick={() => linkGo('board')}>게시판</Nav.Link>\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    </Nav> */}\r\n                    <Nav>\r\n                        <Nav.Link onClick={() => linkGo('quiz')}>Quiz</Nav.Link>\r\n                        <Nav.Link onClick={() => changeTheme(mode)}>\r\n                            Change Mode({ mode === 'dark' ? 'primary' : 'dark'}) { theme } { themeStats.themeState }\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Header;","C:\\_shin\\react-app\\src\\component\\_include\\footer.js",["146"],"import react from 'react';\r\n\r\nconst footer = () => {\r\n\r\n    return(\r\n        <footer>\r\n            <div>\r\n                Copyright © Jinseop Inc. All Rights Reserved.\r\n            </div>\r\n        </footer> \r\n    )\r\n}\r\n\r\nexport default footer;","C:\\_shin\\react-app\\src\\component\\content\\index.js",["147","148","149","150","151","152"],"import { Route, Switch } from \"react-router\"\r\nimport { List, View } from './Board/index'\r\nimport { Main, Login, Join } from './Main/index'\r\nimport ErrorPage from './Error/index'\r\nimport { Qlist } from './Quiz/index';\r\nimport react, { useState } from 'react'\r\nimport useSWR, { mutate } from 'swr';\r\nimport comm from '../../common';\r\n\r\nconst Index = ({ match, history }) =>{\r\n\r\n    return(\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Main}></Route>\r\n                <Route exact path=\"/board\" component={List}></Route>\r\n                <Route path=\"/board/:id\" component={View}></Route>\r\n                <Route path=\"/quiz\" component={Qlist}></Route>\r\n                <Route path=\"/join\" component={Join}></Route>\r\n                <Route path=\"*\" exact component={ErrorPage}></Route>\r\n            </Switch>\r\n            \r\n        </>\r\n    )\r\n} \r\n\r\nexport default Index;","C:\\_shin\\react-app\\src\\component\\content\\Main\\index.js",[],"C:\\_shin\\react-app\\src\\common.js",["153","154"],"C:\\_shin\\react-app\\src\\component\\content\\Quiz\\index.js",[],"C:\\_shin\\react-app\\src\\component\\content\\Error\\index.js",[],"C:\\_shin\\react-app\\src\\component\\content\\Board\\index.js",[],"C:\\_shin\\react-app\\src\\store\\action\\action.js",[],"C:\\_shin\\react-app\\src\\store\\action\\action.type.js",[],"C:\\_shin\\react-app\\src\\component\\content\\Main\\main.js",[],"C:\\_shin\\react-app\\src\\component\\content\\Main\\join.js",["155","156","157","158","159","160","161","162"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { member, login } from '../../../common';\r\nimport axios from 'axios';\r\nimport { loginJoin } from '../../../store/action/action';\r\nimport DefaultApi from '../../../axios';\r\n\r\n\r\nconst Join = ({ history }) => {\r\n\r\n\r\n    const [ user, setUser ] = useState({\r\n        id : '',\r\n        pw : '',\r\n        passfrom : '',\r\n        nickname : ''\r\n    });\r\n\r\n    const [ isValue, setIsValue ] = useState({\r\n        isIdValue : true,\r\n        isNickValue : true,\r\n        isPassValue : true\r\n    })\r\n\r\n    const { id, pw, nickname, passfrom} = user; \r\n\r\n    const { isIdValue, isNickValue, isPassValue } = isValue; \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeJoinData = (e) => {\r\n\r\n        const data = e.target;\r\n\r\n        // checkValue(data);\r\n\r\n        setUser({\r\n            ...user,\r\n            [data.name] : data.value\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const isPass = (pw === passfrom) ? true : false;\r\n\r\n        setIsValue({\r\n            ...isValue,\r\n            isPassValue : isPass\r\n        });\r\n\r\n    }, [pw, passfrom])\r\n\r\n    const checkValue = useCallback((data) => {\r\n\r\n        if(data.name === 'nickname' || data.name === 'id'){\r\n\r\n            const type = data.name === 'id' ? 'email' : data.name;\r\n\r\n            DefaultApi.post('member/check', { type : type, value : data.value}).\r\n                then(res => {\r\n\r\n                    const items = res.data;\r\n\r\n                    if(items.status === 200){\r\n                        if(type === 'email'){\r\n                            setIsValue({\r\n                                ...isValue,\r\n                                isIdValue : items.data.type\r\n                            })\r\n                        }else if(type === 'nickname'){\r\n                            setIsValue({\r\n                                ...isValue,\r\n                                isNickValue : items.data.type\r\n                            })\r\n                        }\r\n                    }else{\r\n                        alert('에러 발생 했어요.');\r\n                    }\r\n            });\r\n        }\r\n    })\r\n\r\n    const userJoin = useCallback(async () => {\r\n        \r\n        if(id === ''){\r\n            alert('아이디를 입력해주세요.');\r\n            return;\r\n        }else if(pw === ''){\r\n            alert('비밀번호를 입력해주세요.');\r\n            return;\r\n        }else if(nickname === ''){\r\n            alert('닉네임을 입력해주세요.');\r\n            return;\r\n        }\r\n\r\n        if(isIdValue === false){\r\n            alert('아이디가 중복되었습니다.');\r\n            return;\r\n        }else if(isNickValue === false){\r\n            alert('닉네임이 중복되었습니다.');\r\n            return;\r\n        }else if(isPassValue === false){\r\n            alert('비밀번호가 다릅니다.');\r\n            return;\r\n        }\r\n\r\n        goToJoin();\r\n    })\r\n\r\n\r\n    const goToJoin = () => { \r\n        DefaultApi.post(`${member}registor`, user).then(res => {\r\n            const items = res.data;\r\n            if(items.status === 200){\r\n                delete user.nickname;\r\n                login(user, (data) => {\r\n                    dispatch(loginJoin(data));\r\n                });\r\n            }else{\r\n                alert(items.data.err_msg);\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    const goToLogin = () => {\r\n        history.push('login');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            회원가입\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>아이디</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                    placeholder=\"Recipient's id\" \r\n                    name=\"id\" \r\n                    onChange={(e) => changeJoinData(e)} \r\n                    value={id}/>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>비밀번호</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                    placeholder=\"Recipient's password\" \r\n                    type=\"password\" \r\n                    name=\"pw\" \r\n                    onChange={(e) => changeJoinData(e)}  \r\n                    value={pw}/>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>비밀번호 확인</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                    placeholder=\"Recipient's password\" \r\n                    type=\"password\" \r\n                    name=\"passfrom\" \r\n                    onChange={(e) => changeJoinData(e)}  \r\n                    value={passfrom}/>\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>이름</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl \r\n                    placeholder=\"Recipient's username\" \r\n                    name=\"nickname\" \r\n                    onChange={(e) => changeJoinData(e)}  \r\n                    value={nickname}/>\r\n            </InputGroup>\r\n\r\n\r\n            <Button variant={(isIdValue === true && isNickValue === true && isPassValue === true ? 'primary' : 'secondary')} onClick={() => userJoin()}>Join</Button>\r\n            <Button variant=\"outline-secondary\" className={'margin'} onClick={() => goToLogin()}>로그인</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Join;","C:\\_shin\\react-app\\src\\component\\content\\Main\\login.js",[],"C:\\_shin\\react-app\\src\\component\\content\\Quiz\\list.js",["163","164"],"import { useEffect, useState } from 'react';\r\n\r\nimport { quiz } from '../../../common';\r\n\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport Step from './step';\r\nimport QuizList from './quiz.list';\r\nimport { CardDeck } from 'react-bootstrap';\r\nimport DefaultApi from '../../../axios';\r\n\r\nconst Qlist = ({history}) => {\r\n\r\n    const [ stageList, setStageList] = useState();\r\n    \r\n    /**\r\n      * arrow function을 사용할 경우, 객체 return은 ()를 포함 후에 return\r\n      * 한줄의 논리일 경우 자동 return\r\n      */\r\n    const { stage } = useSelector((state) => ({stage : state.quizRedux}));\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        DefaultApi.get('/quiz', {}).then(res => {\r\n\r\n            const items = res.data; \r\n            setStageList(items.data); \r\n\r\n        }).catch((e) => e);\r\n\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            {\r\n                stage.stage?.stage === undefined ? \r\n                    stageList === undefined ? <div>Loding</div> : \r\n                    <CardDeck style={ { textAlign: 'center'}}> \r\n                        {\r\n                            stageList.list.map((value, index) => {\r\n                                return (\r\n                                    \r\n                                        <Step data={value} index={index} count={stageList.list.length}></Step>\r\n                                    \r\n                                )\r\n                            })\r\n                        }\r\n                    </CardDeck>\r\n                 : <QuizList idx={stage.stage}></QuizList>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Qlist;","C:\\_shin\\react-app\\src\\component\\content\\Board\\list.js",["165","166","167","168","169"],"import react, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table } from 'react-bootstrap';\r\nimport useSWR from 'swr';\r\nimport axios from 'axios';\r\n\r\nconst List = ({ match, history }) => {\r\n\r\n    const fetcher = async (api) => {\r\n        console.log(api);\r\n    }\r\n\r\n    let { data } = useSWR('/board/api', fetcher);\r\n\r\n    return(\r\n        <div>\r\n            <div>리스트</div>\r\n            <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Username</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2</td>\r\n                        <td>Jacob</td>\r\n                        <td>Thornton</td>\r\n                        <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>3</td>\r\n                        <td colSpan=\"2\">Larry the Bird</td>\r\n                        <td>@twitter</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","C:\\_shin\\react-app\\src\\component\\content\\Board\\view.js",["170","171","172"],"import react, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst view = ({ match }) => {\r\n\r\n    console.log(match);\r\n    console.log('view board');\r\n\r\n    // let [list, setList] = useState([]);\r\n\r\n    return(\r\n        <>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default view;","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\quiz.list.js",["173","174","175"],"import react, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { quiz } from '../../../common';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeStage, changeAnswers, changeHint, loginHintCnt } from '../../../store/action/action';\r\nimport Question from './state/question';\r\nimport * as Fun from '../../../fun';\r\nimport DefaultApi from '../../../axios';\r\n\r\nconst QuizList = ({ idx }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const stage = idx.stage;\r\n\r\n    // 퀴즈에 대한 리스트와 현재 풀고있는 index값 저장 \r\n    // 스테이지 종료시 삭제\r\n    const quizData = JSON.parse(sessionStorage.getItem(`quizStage${stage}`)) ?? undefined;\r\n\r\n    // 이전 답변에 대한 답 : 스테이지가 끝나면 remove 후 DB에 저장\r\n    const beforeAnswer = JSON.parse(sessionStorage.getItem(`answer${stage}`)) ?? [];\r\n\r\n    const beforeHint = JSON.parse(sessionStorage.getItem(`hint${stage}`)) ?? [];\r\n\r\n    const [ quizList, setQuizList ] = useState(quizData?.data);\r\n\r\n    const [ quesIndex, setQuesIndex ]  = useState(1);\r\n\r\n    const { loginData } = useSelector(state => ({ loginData : state.loginRedux }));\r\n \r\n    useEffect(() => {\r\n\r\n        // 스테이지 시작시 해당하는 데이터를 불러오지만, count와 undefined 여부 파악후 DB에 저장\r\n        if(quizList === undefined || quizData?.data?.cnt <= 0){\r\n            DefaultApi.get(`/quiz/${stage}`).then(res => {\r\n            \r\n                const items = res.data;\r\n                sessionStorage.setItem(`quizStage${stage}`, JSON.stringify({'stage' : stage, 'data' : items.data }));\r\n                setQuizList(items.data);\r\n            }).catch(e => console.log(e));\r\n        }\r\n\r\n        return () => {\r\n            console.log('컴포넌트 아웃');\r\n        }\r\n\r\n    }, []);\r\n\r\n    // 다음 스텝으로 넘어가는 함수, 정답여부 및 다음으로 넘어가는 함수\r\n    const nextIndex = (index, answers) => {\r\n\r\n        DefaultApi.get(`/quiz/anwser?idx=${index}&answers=${answers}`).then((res) => {\r\n            const items = res.data;\r\n\r\n            if(items.status === 200){\r\n                Object.assign(quizData, {'index' : index+1});\r\n                sessionStorage.setItem(`quizStage${stage}`, JSON.stringify(quizData));\r\n                \r\n                beforeAnswer.push( {'index' : index, 'answers' : answers});\r\n\r\n                sessionStorage.setItem(`answer${stage}`, JSON.stringify(beforeAnswer));\r\n\r\n                setQuesIndex(index+1);\r\n\r\n            }else{\r\n                console.log(items.data.errMsg);\r\n            }\r\n        }).catch(e => console.log(e));\r\n        \r\n    }\r\n\r\n    const backStage = useCallback(() => { dispatch(changeStage({stage : undefined}))}, [dispatch]);\r\n\r\n    const backIndex = (index) => {\r\n\r\n        if(index === 0){\r\n            backStage();\r\n        }else{\r\n            setQuesIndex(index-1);\r\n        }\r\n\r\n    }\r\n\r\n    const updateAnswer = useCallback((data) => {\r\n        dispatch(changeAnswers(data));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(beforeAnswer.length > 0){\r\n            for(let i=0; i<beforeAnswer.length; i++){\r\n                if(beforeAnswer[i].index === quesIndex){\r\n                    updateAnswer({answers : beforeAnswer[i]?.answers});\r\n                }\r\n            }\r\n        }\r\n\r\n        if(beforeHint.length > 0){\r\n            for(let i=0; i<beforeHint.length; i++){\r\n                if(beforeHint[i].index === quesIndex){\r\n                    updateHint({hint : beforeHint[i]?.hint});\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [quesIndex])\r\n\r\n    const hintData = (idx) => {\r\n\r\n        const beforeHint = JSON.parse(sessionStorage.getItem(`hint${stage}`)) ?? [];\r\n\r\n        let hint = '';\r\n        if(beforeHint.length > 0){\r\n            for(let i=0; i<beforeHint.length; i++){\r\n                if(beforeHint[i].index === quesIndex){\r\n                    hint = beforeHint[i].hint;\r\n                }\r\n            }\r\n        }\r\n\r\n        axios.get(`${quiz}hint/${idx}?hint=${hint}`).then((res) => {\r\n            const items = res.data;\r\n\r\n            if(items.status === 200){\r\n\r\n                if(Fun.emptyYn(items.data) === false){\r\n\r\n                    if(beforeHint.length > 0){\r\n                        for(let i=0; i<beforeHint.length; i++){\r\n                            if(beforeHint[i].index === quesIndex){\r\n                                const data = beforeHint[i]?.hint === undefined ? items.data.lists : beforeHint[i]?.hint + `,${items.data.lists}`;\r\n                            \r\n                                beforeHint.push( {'index' : quesIndex, 'hint' : data});\r\n                                updateHintCount(loginData.hintCnt - 1);\r\n                            }else{\r\n                                beforeHint.push( {'index' : quesIndex, 'hint' : items.data.lists});\r\n                            }\r\n                        }\r\n                    }else{\r\n                        beforeHint.push( {'index' : quesIndex, 'hint' : items.data.lists});\r\n                    }\r\n                    \r\n                    sessionStorage.setItem(`hint${stage}`, JSON.stringify(beforeHint));\r\n                }else{\r\n                    alert('더이상 없습니다.');\r\n                }\r\n                \r\n            }else{\r\n                console.log(items.data.errMsg);\r\n            }\r\n        }).catch(e => console.log(e));\r\n    }\r\n\r\n    const updateHint = useCallback((data) => {\r\n        dispatch(changeHint(data));\r\n    }, [dispatch]);\r\n    \r\n    const hintClick = (idx) => {\r\n        hintData(idx);\r\n    }\r\n\r\n    const updateHintCount = useCallback((data) => {\r\n        dispatch(loginHintCnt({ hintCnt : data}));\r\n    }, [dispatch]);\r\n\r\n    const endQuiz = () => {\r\n        axios.post(`${quiz}${stage}`, {mId : loginData.idx}).then(res => {\r\n\r\n            if(res.status === 200){\r\n                sessionStorage.removeItem(`quizStage${stage}`);\r\n                sessionStorage.removeItem(`answer${stage}`);\r\n                sessionStorage.removeItem(`hint${stage}`);\r\n            }else{\r\n                console.log('디비에러');\r\n            }\r\n            \r\n        }).catch((e) => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            {\r\n                (() => {\r\n                    if(quizList === undefined){\r\n                        return(<div>로딩중</div> )\r\n                    }else{\r\n\r\n                        if(quizList.cnt > 0){\r\n                            return quizList.list.map((value, index) => {\r\n                                return (\r\n                                    <Question \r\n                                        quesIndex={quesIndex} \r\n                                        backStage={backStage}\r\n                                        backIndex={backIndex}\r\n                                        value={value}\r\n                                        index={index}\r\n                                        nextIndex={nextIndex}\r\n                                        hintClick={hintClick}\r\n                                        count={quizList.list.length}\r\n                                        endQuiz={endQuiz}/>\r\n                                )\r\n                            })\r\n                        }else{\r\n                            return(\r\n                                <div>데이터 실패</div>\r\n                            )\r\n                        }\r\n                    }\r\n                })()\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizList;","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\step.js",["176","177"],"import { react, useCallback } from 'react';\r\nimport { ButtonGroup, Card, Button  } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeStage } from '../../../store/action/action';\r\nimport { CardText } from 'react-bootstrap-icons';\r\nconst Step = ({ data, index }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeSubmit = useCallback((state) =>{\r\n        dispatch(changeStage({stage : state}));\r\n    }, [dispatch]);\r\n\r\n    const { loginData } = useSelector(state => ({ loginData : state.loginRedux }));\r\n    \r\n    return( \r\n    \r\n        <Card style={{ width: '18rem', textAlign: 'center', justifyContent: 'center', alignItems: 'center' }} border={ (loginData.quiz.indexOf(index+1) > -1 && loginData?.quiz !== undefined ? 'primary' : '') }>\r\n            {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n            <Card.Body>\r\n                <Card.Title><CardText></CardText>&nbsp;{data.stepTitle}</Card.Title>\r\n                <Card.Text>\r\n                    {index + 1} : {data.stepTitle}\r\n                </Card.Text>\r\n                <Button onClick={() => changeSubmit(data.idx)} variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    ) \r\n}\r\n\r\nexport default Step; ","C:\\_shin\\react-app\\src\\fun.js",[],"C:\\_shin\\react-app\\src\\component\\content\\Quiz\\state\\question.js",["178"],"import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Answer from './answer';\r\n\r\n\r\nconst Question = ({ quesIndex, backIndex, backStage, value, index, nextIndex, hintClick, count, endQuiz}) => {\r\n\r\n    const quiz = useSelector((state) => ({quiz : state.quizRedux}));\r\n\r\n    const [ answers, setAnsers ] = React.useState(quiz.quiz.answer);\r\n\r\n    const anwserClick = (answer) => {\r\n\r\n        if(answers !== undefined){\r\n            if(answers.indexOf(answer) >-1){\r\n\r\n                const spit = answers.split(',');\r\n                \r\n                for(let i=0; i<spit.length; i++){\r\n                    if(spit[i] === answer){\r\n                        spit.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if(spit.length > 0){\r\n\r\n                    answer = '';\r\n\r\n                    for(let i=0; i<spit.length; i++){\r\n                        answer = (answer === '' && i === 0) ? spit[0] : answer+`,${spit[i]}`;\r\n                    }\r\n\r\n                }else{\r\n                    answer = undefined;\r\n                }\r\n\r\n                setAnsers(answer);\r\n\r\n                return;\r\n            }\r\n        }\r\n            \r\n        answer = answers === undefined ? answer : answers+','+answer;\r\n        setAnsers(answer);\r\n        \r\n    }\r\n\r\n    const hint = quiz.quiz.hint;\r\n\r\n    /**\r\n     * API 정답은 DB의 정답을 기준으로 반복을 돌리고, 해당하는 데이터에 정답이 모두 있을 경우 리턴 아닐 경우 false\r\n     * 힌트보기는, while(true)로 반복을 돌려서, 해당하는 데이터가 같으면 또 돌리고, 그게 아닐 경우에는 안돌린다.(힌트에 대한 로그는 디비로 저장)\r\n     * 정답의 갯수, 남은 갯수가 같거나 주관식이면 힌트보기 삭제\r\n     */\r\n\r\n    return(\r\n        \r\n        <Modal \r\n            show={quesIndex === index} \r\n            onHide={() => backStage()} \r\n            backdrop=\"static\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            size=\"lg\"\r\n            centered>\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{index+1}. {value.questions}</Modal.Title>\r\n            </Modal.Header> \r\n                <Modal.Body>\r\n                    {\r\n                        value.lists.map((answer, index) => { \r\n                            return (\r\n                                <Answer anwserClick={anwserClick}\r\n                                hint={hint}\r\n                                answer={answer}\r\n                                answers={answers}\r\n                                index={index} />\r\n                            )\r\n                        })\r\n                    }    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                {\r\n                    quesIndex !== 0 ?\r\n                    <Button variant=\"secondary\" onClick={() => backIndex(quesIndex)}>\r\n                        Back Step\r\n                    </Button> : ''\r\n                }\r\n                \r\n\r\n                {\r\n                    value.type === 'chioce' ? \r\n                        <Button variant=\"secondary\" onClick={() => hintClick(value.idx)}>\r\n                            힌트보기\r\n                        </Button> : ''\r\n                }\r\n                {\r\n                    count !== quesIndex ? \r\n                    <Button variant=\"primary\" onClick={() => nextIndex(index, '1')}>\r\n                        Next Step\r\n                    </Button> : \r\n                    <Button variant=\"primary\" onClick={() => endQuiz()}>\r\n                        제출\r\n                    </Button> \r\n                }\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default Question;","C:\\_shin\\react-app\\src\\component\\content\\Quiz\\state\\answer.js",[],"C:\\_shin\\react-app\\src\\axios.js",["179"],"import axios from 'axios';\r\n\r\nconst URL = (window.location.hostname == 'localhost') ? 'http://localhost:5000' : '//jinseop-api.click';\r\n\r\nconst DefaultApi = axios.create({\r\n    baseURL:URL,\r\n});\r\n\r\nexport default DefaultApi;","C:\\_shin\\react-app\\src\\component\\_include\\helmet.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":12},{"ruleId":"184","severity":1,"message":"188","line":13,"column":8,"nodeType":"186","messageId":"187","endLine":13,"endColumn":12},{"ruleId":"184","severity":1,"message":"189","line":13,"column":14,"nodeType":"186","messageId":"187","endLine":13,"endColumn":21},{"ruleId":"184","severity":1,"message":"190","line":19,"column":9,"nodeType":"186","messageId":"187","endLine":19,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":82,"column":6,"nodeType":"193","endLine":82,"endColumn":17,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"195","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"196","line":2,"column":23,"nodeType":"186","messageId":"187","endLine":2,"endColumn":34},{"ruleId":"184","severity":1,"message":"197","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":16},{"ruleId":"184","severity":1,"message":"198","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":19},{"ruleId":"184","severity":1,"message":"195","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"199","line":3,"column":16,"nodeType":"186","messageId":"187","endLine":3,"endColumn":21},{"ruleId":"184","severity":1,"message":"195","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":13},{"ruleId":"184","severity":1,"message":"200","line":6,"column":17,"nodeType":"186","messageId":"187","endLine":6,"endColumn":25},{"ruleId":"184","severity":1,"message":"201","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":14},{"ruleId":"184","severity":1,"message":"202","line":7,"column":18,"nodeType":"186","messageId":"187","endLine":7,"endColumn":24},{"ruleId":"184","severity":1,"message":"203","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":12},{"ruleId":"184","severity":1,"message":"204","line":1,"column":9,"nodeType":"186","messageId":"187","endLine":1,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":6,"column":39,"nodeType":"207","messageId":"208","endLine":6,"endColumn":41},{"ruleId":"184","severity":1,"message":"209","line":1,"column":30,"nodeType":"186","messageId":"187","endLine":1,"endColumn":39},{"ruleId":"184","severity":1,"message":"210","line":3,"column":23,"nodeType":"186","messageId":"187","endLine":3,"endColumn":34},{"ruleId":"184","severity":1,"message":"211","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"191","severity":1,"message":"212","line":52,"column":8,"nodeType":"193","endLine":52,"endColumn":22,"suggestions":"213"},{"ruleId":"184","severity":1,"message":"214","line":54,"column":11,"nodeType":"186","messageId":"187","endLine":54,"endColumn":21},{"ruleId":"191","severity":1,"message":"215","line":54,"column":24,"nodeType":"186","endLine":54,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":60,"column":80,"nodeType":"218","messageId":"219","endLine":60,"endColumn":81,"fix":"220"},{"ruleId":"191","severity":1,"message":"215","line":84,"column":22,"nodeType":"186","endLine":84,"endColumn":33},{"ruleId":"184","severity":1,"message":"221","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"184","severity":1,"message":"211","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"195","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"200","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"222","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":14},{"ruleId":"184","severity":1,"message":"211","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":13},{"ruleId":"184","severity":1,"message":"223","line":13,"column":11,"nodeType":"186","messageId":"187","endLine":13,"endColumn":15},{"ruleId":"184","severity":1,"message":"195","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"200","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"222","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":14},{"ruleId":"184","severity":1,"message":"195","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"191","severity":1,"message":"224","line":47,"column":8,"nodeType":"193","endLine":47,"endColumn":10,"suggestions":"225"},{"ruleId":"191","severity":1,"message":"226","line":105,"column":8,"nodeType":"193","endLine":105,"endColumn":19,"suggestions":"227"},{"ruleId":"184","severity":1,"message":"195","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":15},{"ruleId":"184","severity":1,"message":"228","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":21},{"ruleId":"184","severity":1,"message":"229","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":3,"column":39,"nodeType":"207","messageId":"208","endLine":3,"endColumn":41},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'mode' is assigned a value but never used.","'setMode' is assigned a value but never used.","'memId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'react' is defined but never used.","'NavDropdown' is defined but never used.","'Helmet' is defined but never used.","'ReactHelmet' is defined but never used.","'Login' is defined but never used.","'useState' is defined but never used.","'useSWR' is defined but never used.","'mutate' is defined but never used.","'comm' is defined but never used.","'loginJoin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'axios' is defined but never used.","React Hook React.useEffect has a missing dependency: 'isValue'. Either include it or remove the dependency array. You can also do a functional update 'setIsValue(i => ...)' if you only need 'isValue' in the 'setIsValue' call.",["233"],"'checkValue' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"234","text":"235"},"'quiz' is defined but never used.","'Link' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'quizData?.data?.cnt', 'quizList', and 'stage'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has missing dependencies: 'beforeAnswer', 'beforeHint', 'updateAnswer', and 'updateHint'. Either include them or remove the dependency array.",["237"],"'ButtonGroup' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},[1523,1542],"\r\n                .",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [history, loginData]",{"range":"246","text":"247"},"Update the dependencies array to be: [pw, passfrom, isValue]",{"range":"248","text":"249"},"Update the dependencies array to be: [quizData?.data?.cnt, quizList, stage]",{"range":"250","text":"251"},"Update the dependencies array to be: [beforeAnswer, beforeHint, quesIndex, updateAnswer, updateHint]",{"range":"252","text":"253"},[2083,2094],"[history, loginData]",[1242,1256],"[pw, passfrom, isValue]",[1682,1684],"[quizData?.data?.cnt, quizList, stage]",[3408,3419],"[beforeAnswer, beforeHint, quesIndex, updateAnswer, updateHint]"]